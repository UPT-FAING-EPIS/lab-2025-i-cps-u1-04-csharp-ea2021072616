name: Compilar, Testear, Analizar y Publicar NuGet

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Compilar & Publicar Paquetes NuGet
    runs-on: ubuntu-latest

    steps:
    - name: Clonar repositorio
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Necesario para SonarCloud

    - name: Configurar .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'

    # ============================= 
    # RESTAURAR DEPENDENCIAS
    # ============================= 
    - name: Restaurar dependencias
      run: |
        dotnet restore Payment/Payment.Domain/Payment.Domain.csproj
        dotnet restore ATM/ATM.Domain/ATM.Domain.csproj

    # ============================= 
    # PRUEBAS
    # ============================= 
    - name: Ejecutar pruebas de Payment
      run: dotnet test Payment/Payment.Domain.Tests/Payment.Domain.Tests.csproj --no-build --verbosity normal --collect:"XPlat Code Coverage"

    - name: Ejecutar pruebas de ATM
      run: dotnet test ATM/ATM.Domain.Tests/ATM.Domain.Tests.csproj --no-build --verbosity normal --collect:"XPlat Code Coverage"

    # ============================= 
    # SONARCLOUD
    # ============================= 
    - name: Configurar SonarCloud
      uses: SonarSource/sonarcloud-github-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: .
        args: >
          /d:sonar.projectKey=erickorganizacion_lab4
          /d:sonar.organization=erickorganizacion
          /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml"
          /d:sonar.coverage.exclusions="**Test*.cs"
          /d:sonar.cpd.exclusions="**Test*.cs"
          /d:sonar.dotnet.excludeTestProjects=true

    - name: Compilar proyectos
      run: |
        dotnet build Payment/Payment.Domain/Payment.Domain.csproj --no-restore --configuration Release
        dotnet build ATM/ATM.Domain/ATM.Domain.csproj --no-restore --configuration Release

    # ============================= 
    # EMPAQUETADO
    # ============================= 
    - name: Crear paquetes NuGet
      run: |
        dotnet pack Payment/Payment.Domain/Payment.Domain.csproj --configuration Release --output ./nupkgs --no-build
        dotnet pack ATM/ATM.Domain/ATM.Domain.csproj --configuration Release --output ./nupkgs --no-build

    # ============================= 
    # PUBLICACIÓN
    # ============================= 
    - name: Publicar paquetes en GitHub Packages
      if: github.ref == 'refs/heads/main'  # Solo publica en la rama main
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Usa el token automático
      run: |
        for file in ./nupkgs/*.nupkg
        do
          dotnet nuget push "$file" \
            --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
            --api-key "$NUGET_AUTH_TOKEN" \
            --skip-duplicate
        done
