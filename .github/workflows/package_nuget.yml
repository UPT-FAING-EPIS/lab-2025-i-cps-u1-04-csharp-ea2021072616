name: Compilar, Testear, Analizar y Publicar NuGet

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Compilar & Publicar Paquetes NuGet
    runs-on: ubuntu-latest

    steps:
    - name: Clonar repositorio
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Necesario para SonarCloud

    - name: Configurar .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'

    # =============================
    # RESTAURAR DEPENDENCIAS
    # =============================
    - name: Restaurar dependencias
      run: |
        dotnet restore Payment/Payment.Domain/Payment.Domain.csproj
        dotnet restore ATM/ATM.Domain/ATM.Domain.csproj

    # =============================
    # PRUEBAS CON COBERTURA
    # =============================
    - name: Ejecutar pruebas de Payment
      run: |
        dotnet test Payment/Payment.Domain.Tests/Payment.Domain.Tests.csproj \
          --no-build \
          --configuration Release \
          --collect:"XPlat Code Coverage" \
          --settings coverlet.runsettings \
          --logger "trx;LogFileName=PaymentTestResults.trx"

    - name: Ejecutar pruebas de ATM
      run: |
        dotnet test ATM/ATM.Domain.Tests/ATM.Domain.Tests.csproj \
          --no-build \
          --configuration Release \
          --collect:"XPlat Code Coverage" \
          --settings coverlet.runsettings \
          --logger "trx;LogFileName=ATMTestResults.trx"

    # =============================
    # SONARCLOUD (CONFIGURACIÓN MEJORADA)
    # =============================
    - name: Instalar SonarScanner
      run: dotnet tool install --global dotnet-sonarscanner --version=5.*

    - name: Configurar PATH para herramientas .NET
      run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

    - name: Iniciar análisis SonarCloud
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet sonarscanner begin \
          /k:"erickorganizacion_lab4" \
          /o:"erickorganizacion" \
          /d:sonar.login="$SONAR_TOKEN" \
          /d:sonar.host.url="https://sonarcloud.io" \
          /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" \
          /d:sonar.coverage.exclusions="**Test*.cs" \
          /d:sonar.cpd.exclusions="**Test*.cs" \
          /d:sonar.tests.disabled=true \
          /d:sonar.verbose=true

    - name: Compilar proyectos para SonarCloud
      run: |
        dotnet build Payment/Payment.Domain/Payment.Domain.csproj \
          --no-restore \
          --configuration Release
        
        dotnet build ATM/ATM.Domain/ATM.Domain.csproj \
          --no-restore \
          --configuration Release

    - name: Finalizar análisis SonarCloud
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: dotnet sonarscanner end /d:sonar.login="$SONAR_TOKEN"

    # =============================
    # EMPAQUETADO
    # =============================
    - name: Crear paquetes NuGet
      run: |
        mkdir -p ./nupkgs
        dotnet pack Payment/Payment.Domain/Payment.Domain.csproj \
          --configuration Release \
          --output ./nupkgs \
          --no-build
        
        dotnet pack ATM/ATM.Domain/ATM.Domain.csproj \
          --configuration Release \
          --output ./nupkgs \
          --no-build

    # =============================
    # PUBLICACIÓN (SOLO EN MAIN)
    # =============================
    - name: Publicar paquetes en GitHub Packages
      if: github.ref == 'refs/heads/main'
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        for file in ./nupkgs/*.nupkg
        do
          dotnet nuget push "$file" \
            --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
            --api-key "$NUGET_AUTH_TOKEN" \
            --skip-duplicate
        done
