name: Build & Publish NuGet

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build-test-analyze-package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: List files in the repository (debug)
        run: |
          ls -R

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # Ejecutar pruebas unitarias para ambos proyectos
      - name: Run Unit Tests
        run: |
          dotnet test ATM/ATM.Domain/ATM.Domain.csproj --logger "trx;LogFileName=ATM_tests.trx"
          dotnet test Payment/Payment.Domain/Payment.Domain.csproj --logger "trx;LogFileName=Payment_tests.trx"

      # Publicar los resultados de las pruebas en GitHub
      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        with:
          name: Unit Tests
          path: './ATM_tests.trx'
          reporter: dotnet-trx

      # Análisis con SonarCloud
      - name: Begin SonarCloud analysis
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectKey: erickorganizacion_lab4  # Clave del proyecto
          organization: erickorganizacion  # Clave de la organización
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Construir los paquetes NuGet para ambos proyectos
      - name: Build NuGet Packages
        run: |
          dotnet pack ATM/ATM.Domain/ATM.Domain.csproj -c Release -o output
          dotnet pack Payment/Payment.Domain/Payment.Domain.csproj -c Release -o output

      # Publicar los paquetes NuGet en tu cuenta personal (periférica)
      - name: Push NuGet Packages
        run: |
          for file in output/*.nupkg; do
            dotnet nuget push "$file" \
              --api-key ${{ secrets.NUGET_API_KEY }} \
              --source https://api.nuget.org/v3/index.json
          done
